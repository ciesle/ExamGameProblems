"ストリーム暗号方式","キーストリームを連続に生成する。初期化ベクトルIVをNonceとして使い、それを用いて共通カギを安全にできるようにしている。","unlearned"
"ブロック暗号方式","AESなど","unlearned"
"暗号利用モード","ブロックを繰り返し使っていく","unlearned"
"CBC","Cipher Block Chaining。暗号ブロック連鎖","unlearned"
"CBCの概要","（直前の暗号ブロック xor 平文）の暗号化　を連鎖","unlearned"
"CTRの概要","カウンタを暗号化 xor 平文　を繰り返す","unlearned"
"GCM","ガロア認証＋CTRモードにより、暗号化とメッセージ認証を同時に行う","unlearned"
"ECDSA","楕円曲線暗号","unlearned"
"EDH","ephemeral diffie hellman","unlearned"
"DH鍵交換","p＝素数,gを決める。a, bをそれぞれ決める。p^a, p^bを送る。p^a^bが鍵","unlearned"
"認証の方法","主体認証、メッセージ認証、第三者認証","unlearned"
"ユーザ認証","ユーザが正しい","unlearned"
"サーバ認証","サーバが正しい","unlearned"
"否認防止","送り主が正しい","unlearned"
"二要素認証","本人だけが知っている、本人だけが持っている、本人である","unlearned"
"ワンタイムパスワード","リプレイ攻撃を抑制","unlearned"
"チャレンジレスポンス方式","","unlearned"
"時刻同期方式","時刻をもとにトークンでパスワードを生成する。","unlearned"
"デジタル署名方式","否認防止とメッセージ認証が同時にできる","unlearned"
"バイオメトリクス方式","生態認証","unlearned"
"ICカード方式","紛失のリスクあり","unlearned"
"ハッシュアルゴリズム","衝突困難性、原像計算困難性、第二種原像計算困難性","unlearned"
"鍵付きハッシュ","平文＋パスワードをハッシュ化","unlearned"
"HMAC","Hash-based Message Authentication Code","unlearned"
"CBC-MAC, XCBC-MAC","IVを0にしてCBCで暗号化していくMACの作り方","unlearned"
"AEAD、GCM","暗号化とメッセージ認証を同時にする仕組み","unlearned"
"デジタル認証の原理","ダイジェストを秘密鍵で暗号化。公開鍵で復号したものと計算したものが一致すれば、送り主は秘密鍵を持っているし、メッセージも正しいとわかる","unlearned"
"第三者認証","電子証明書を検証する","unlearned"
"電子証明書の仕組み","CAにCSR（アルゴリズム、CAについて、サブジェクトや公開鍵についてなど）を発行する。CSRを秘密鍵で暗号化してCAに送る。CAが検証して、サインして送り返す","unlearned"
"電子証明書使用時の注意点","信頼できるCAから出ているか？正しい公開鍵か？送り主は正しいか？有効期限が切れていない、失効証明書リストに入っていない","unlearned"
"PKI","Public Key Infrastructure","unlearned"
"証明書チェーン","上位の証明書もまとめて送ること","unlearned"
"ルートCA、プライベートCA","自分の秘密鍵で署名するCA、自分で作るルートCA","unlearned"
"TCPフォールバック","512バイト以上のDNSはTCPを使用する","unlearned"
"ステートフルインスペクション","セッションにおける応答に対する規則は自動で追加されるタイプのFW","unlearned"
"ステートフルフェールオーバー","FWがダウンしたときに情報を引き継ぐこと。","unlearned"
"UTM","Unified Threat Management","unlearned"
"PAC","Proxy Auto Configuration","unlearned"
"Proxy ServerでのHTTP","パスにホスト名も含め、プロキシから送り出すときはホスト名を削除する","unlearned"
"リバースプロキシ","プロキシサーバでアプリケーションの通信を一度終端させ、新しくWebサーバとのセッションを貼る","unlearned"
"プロキシを利用したTLS通信","CONNECTを送り通信の媒介を依頼。TLSトンネルを作るため、プロキシ鯖が通信内容を知ることはない。CONNET→(SYN/ACK)→200OK→CLIENT HELLO ....","unlearned"
"IDS","ネットワーク型、ホスト型","unlearned"
"ネットワーク型IDS","シグネチャ型、アノマリ型","unlearned"
"IDSのポート設定","監視対象につなぐものはミラーポートのプロミスキャスでステルス化。別のポートをIDSコンソールにつなぐ。","unlearned"
"入口対策、出口対策","出口はバックドアを防ぐ。外部に出ていく通信をプロキシ経由にする、SSL可視化装置を使う、ファイアウォールを使うなど","unlearned"
"メールのスキャン","SMTP中継サーバとSMTP/POPサーバを設置する。SMTP/POPサーバは内部セグメントに置き、ウイルス対策を動作させる","unlearned"
"送信ドメイン認証","メールサーバが実施。送り主のDNS鯖に問い合わせ、正しいIPかを確認","unlearned"
"SPF","Sender Policy Framework。受信サイトのメールサーバがエンベロープのFromからドメインを取り出し、DNSのSPFレコードを使い認証する","unlearned"
"DKIM","Domain Keys Identified Mail。公開鍵をDNSのTXTに登録。秘密鍵で署名。","unlearned"
"第三者中継","サイト外部から受け取ったメールを外部に転送すること","unlearned"
"SMTP-AUTH","認証情報を交換する。POP before SMTPより新しい","unlearned"
"POP before SMTP","POPにアクセスして認証⇒しばらくアクセス許可","unlearned"
"OP24B","25番ポートブロック。動的割り当てアドレスからのISP外部へのTCP25番コネクションを禁止する。迷惑メールが社会全体で減る。","unlearned"
"サブミッションポート","OP25Bが例外的に許可する。基本的にSMTP-AUTHがかかる","unlearned"
"ハーフオープン","SYNの3番目を待っている状態","unlearned"
"DoS","Deniel of Service","unlearned"
"UDPフラッド","UDPを送り付け、Destination Unreachedを返させることで帯域を圧迫する","unlearned"
"DNSリフレクタ攻撃","オープンリゾルバに送る。DNSAｍｐとも","unlearned"
"CHAP","サーバがチャレンジコードを発行、ユーザがUとU+P+Cをハッシュしたものを送る。受信元がUを検索、同じなら認証完了","unlearned"
"EAP","Extensible Authentication Protocol","unlearned"
"EAPパケット","コード、識別子、長さ、タイプ、タイプデータ。要求、応答パケットではタイプに値を入れてやり取りし、タイプデータにユーザIDを入れる。","unlearned"
"802.1XのEAP","EAPOLにカプセル化して送る。","unlearned"
"AAAモデル","Authentication、Authorize、Accounting（認証、認可、アカウント管理）","unlearned"
"RADIUSパケット","コード、ID、長さ、タイプ、アトリビュート","unlearned"
"RADIUSを用いたCHAP","RADIUSクライアントがチャレンジを送り、利用者が返す。それをRADIUS要求としてサーバに送り、サーバが認可か拒否化を返す。最後に利用者に結果を返す","unlearned"
"RADIUSのアクセスチャレンジ","チャレンジをRADIUSサーバが生成して送る。","unlearned"
"オーセンティケータ","802.1Xにおける認証機能付きスイッチのこと","unlearned"
"サプリカント","802.1Xにおける認証を要求するもののこと","unlearned"
"802.1X","","unlearned"
"EAP-PEAP","認証にパスワードを使う802.1X","unlearned"
"EAP-TLS","認証に証明書を使う802.1X","unlearned"
"MPPE","Microsoft Point-to-Point Encryption","unlearned"
"PMK","Pairwised Master Key","unlearned"
"PTK","pairwised transient key 一時鍵。EAPOL用と通信用の2種類作られる","unlearned"
"GMK","Group Master Key 定期的にAPが作る","unlearned"
"GTK","Group Transient Key。定期的に配布される","unlearned"
"GRE","Generic Routing Encapsulation。IPヘッダ、GREヘッダ、IPヘッダの順で着く","unlearned"
"GRE over IPsec","GREはIPマルチキャストもカプセル化できる。IPsecはできないので、IPsecで暗号化⇒GREでトンネリングという手が使われる","unlearned"
"トランスポートモード、トンネルモード","トランスポートは最初から最後まで暗号化する。v2ではデフォルトがトンネル","unlearned"
"セレクタ","ゲートウェイがIPパケットの扱いを決めるときに使うもの。PROTECT、BYPASS、DISCARD","unlearned"
"セキュリティポリシ","IPsecパケットの扱いを決めるSPD（Security Policy Database）に登録する。","unlearned"
"ISAKMP SA","IKEv1でのIKE SA","unlearned"
"IPsec SA","IKEv2でのChild SA","unlearned"
"リキー","鍵を新しく作る時に行うこと","unlearned"
"PFS","Perfect Forward Security。有効にしたらDH交換が行われ、向こうでは簡易的なナンスの交換のみ","unlearned"
"SPI","Security Parameter Index。IPsec SAを識別するために使う","unlearned"
"IKEv1","フェーズ1でパラメータ交換とエンティティ識別、フェーズ2でIPsec SAのためのパラメータ交換","unlearned"
"IKEv2","IKA_SA_INITでパラメータ交換、IKE_AUTHでエンティティ識別とIPsec SAのためのパラメータ交換","unlearned"
"イニシエータ、レスポンダ","IKEの起動側、応答側","unlearned"
"メインモード、アグレッシブモード","固定IPをもとにエンティティ認証に必要な情報を選ぶ。アグレッシブでは固定IPでなくてもよい。v2では区別がなくなる","unlearned"
"疑似乱数関数の選択","v1では暗黙的に決まり、v2では明示的に決める","unlearned"
"PSK","Pre Shard Key","unlearned"
"エンティティ認証の方法","フェーズ1で交換した情報に対しPSKを使い鍵付きハッシュを求めるか、電子証明書を使いデジタル署名するか","unlearned"
"IPsecで指定するID","メインモードではIPアドレス、アグレッシブではドメイン名など","unlearned"
"IPsecのライフタイム","SAを維持する時間","unlearned"
"XAUTH","利用者認証をする仕組み。VPNでは独自のものがあるためあまり使用されない","unlearned"
"IPsec通信でカプセル化するIPアドレスの範囲","v1ではID、v2ではトラフィックセレクタを用いて交換する","unlearned"
"CREATE_CHILD_SA","IKE SAを使ってChild SAを作る方法","unlearned"
"INFORMATIONAL","エラー、ステータス、ネットワーク設定、SAの削除などを伝える","unlearned"
"AH","Authentication Header","unlearned"
"ESP","Encapsulating Security Payload","unlearned"
"AHの認証範囲","トランスポートではオリジナルヘッダ＋AHヘッダ＋ペイロード、トンネルではIP*2+AH+ペイロード","unlearned"
"ESPの暗号化範囲、認証範囲","暗号化範囲は旧IP＋ペイロード＋ESPトレーラ、認証範囲はESPヘッダ＋旧IP＋ペイロード＋トレーラ。認証データは最後につける","unlearned"
"IPsecでマルチキャストができない理由","IKEが使えない、シーケンス番号が設定できない","unlearned"
"L2TP over IPsecのパケットフォーマット","IP, ESP, UDP, L2TP, PPP, IP","unlearned"
"L2TP over IPsecでPPPを使う理由","PPPに認証機能とIPアドレス払い出し機能がついているから","unlearned"
"NAT + IPsec","IPアドレスのハッシュは等しいか？→ESPの手前にUDPを挟んで通信する。","unlearned"
"GRE over IPsecのパケットフォーマット","IP ESP GRE IP ESPトレーラ ESP認証データ","unlearned"
"TLSのセキュリティ機能","主体認証、メッセージ認証、暗号化","unlearned"
"TLSの認証、暗号化範囲","認証範囲はペイロード、暗号化範囲はペイロード＋MAC","unlearned"
"ミドルボックス","IDSなどの、IPパケットを転送するルータ以外の機器","unlearned"
"ハンドシェークプロトコル","TLSセッションを作るための通信","unlearned"
"TLSの通信プロトコル","アプリケーションデータプロトコル、ハンドシェークプロトコル、Change Cipher Spec Protocol、アラートプロトコル","unlearned"
"TLS1.2のシーケンス","Client Hello, (Server Hello, Certificate, Certificate Request, Server Hello Done), (Certificate, Client Key Exchange, Certificate Verify, Change Cipher Spec, Finished), (Change Cipher Spec, Finished)","unlearned"
"TLS1.2で使う暗号スイート","鍵交換、署名、暗号化、ハッシュ関数","unlearned"
"TLS1.2でのHelloメッセージ群","Clientが暗号スイートの候補の提示、Serverが指定","unlearned"
"Client Key Exchange","プリマスターシークレット（48バイト）を送る","unlearned"
"Certificate Verify","クライアント署名をする（TLS1.3ではサーバー署名もする）","unlearned"
"Finishedですること","マスターシークレットを使い暗号化し、改ざんされていないかを検知する","unlearned"
"マスターシークレット","プリマスターシークレット＋Helloでやり取りした2つの乱数から作る","unlearned"
"1-RTT","TLS1.3でセッション再開後に1往復で通信を開くこと。0-RTTもあるが脆弱","unlearned"
"セッション再開","セッション中にPSKを生成し共有しておく","unlearned"
"AEAD","Authenticated Encryption with Associated Data。TLS1.3では必須。","unlearned"
"DHE","Ephemeral Diffie Hellman","unlearned"
"TLS1.3でのシーケンス","Client Hello, (Server Hello, Encrypted Extensions, Certificate Request, Certificate, Certificate Verify, Finished), (Certificate, Certificate Verify, Finished)","unlearned"
"TLS1.3でのHello","鍵アルゴリズムの候補を伝えると同時に一つ選んで鍵生成用の公開鍵と乱数も送ってしまう","unlearned"
"Encrypted Extensions","Helloで決め切れなかったデータ","unlearned"
"リバースプロキシ方式のSSL-VPN","VPN装置がリバースプロキシとして使われる。ブラウザを用いて操作。","unlearned"
"ポートフォワーディング方式のSSL-VPN","APサーバのアドレスをhostsファイルに入れ、ループバックアドレスに向ける。専用モジュールが受け取り、カプセル化して送る。VPN装置が解除してAPサーバ向けに送る","unlearned"
"ポートフォワーディング方式のSSL-VPNの注意点","APサーバが複数ある時は、独自ヘッダをつけて通信先を判別する","unlearned"
"L2フォワーディング方式のSSL-VPN","仮想NICを作り、そこに向けた通信をキャプチャしてVPN装置に向けて送る。","unlearned"
"WEP","Wired Equivalent Privacy","unlearned"
"WEPのキーストリーム","WEPキーとIVからRC4方式で作りだす。パケットごとにIVを平文で送り、変える","unlearned"
"WEPの脆弱性","キーの漏洩、同じIVを見つけると、メッセージのxorを取ることで元が推測できる","unlearned"
"FMS攻撃","特定のIVであれば、キーストリームの最初の数バイトからWEPキーの最初の数文字が特定できる","unlearned"
"ICV","Integrity Check Value。CRCのため改竄検査に使えない","unlearned"
"802.11の利用者認証","オープンシステム認証、共有鍵認証（漏洩に対して弱い）","unlearned"
"WPA","Wifi Protected Access。Wi-Fi AllianceがWEPの対策として急遽発表した。802.11iのマイナーチェンジ","unlearned"
"エンタープライズモード","802.1Xを使って認証する。EAP-PEAP、EAP-TLSなどが使える。PMKを動的に生成して使う。","unlearned"
"パーソナルモード","PSKを使う","unlearned"
"TKIP、Michael","Temporal Key Integrity Protocol。WEPの改良版。共有鍵は2つ作り、RC4を使う。","unlearned"
"鍵混合","第1段階で一次鍵＋MAC＋IVの上位でキーストリームを作り、これ＋IVの会でキーストリーム2を作る。IVは毎回インクリメントされ、48ビットある","unlearned"
"CCMP","Counter-mode with CBC-MAC Protocol","unlearned"
"CCMPの概要","PMK、乱数、MACアドレスから暗号化鍵と認証鍵を作る。CTRで暗号化。CBCでMACを作る。","unlearned"
"CFBモード","Cipher FeedBack。IVの暗号化 xor 平文=暗号。IVを暗号に置き換えて繰り返す。","unlearned"
"OFBモード","Output FeedBack。IVの暗号化 xor 平文=暗号。IVをIVの暗号化に置き換えて繰り返す。","unlearned"
